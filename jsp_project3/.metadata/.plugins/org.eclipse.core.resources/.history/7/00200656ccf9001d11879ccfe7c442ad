package controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.CommentVO;
import service.CommentService;
import service.CommentServiceImpl;


@WebServlet("/cmt/*")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	private static final Logger log = LoggerFactory.getLogger(CommentController.class);
	// 목적지 주소로 보내는 destPage 사용X
	// 비동기 통신으로 요청이 온 곳으로 돌려보냄
	private int isOk;
	private CommentService csv;
	
    public CommentController() {
        csv = new CommentServiceImpl();
    }

	
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		// contentType은 사용하지 않음.
		
		// cmt/post/1  cmt/modify/1
		String uri = request.getRequestURI();  /* REST API*/
		log.info(uri);
		// modify/1, post
		String pathUri = uri.substring("/cmt/".length());
		String path = pathUri;	// post
		String pathVar = "";
		
		if(pathUri.contains("/")) {
			path = pathUri.substring(0,pathUri.lastIndexOf("/")); // modify
			pathVar = pathUri.substring(path.lastIndexOf("")+1);  // 1
		}
		
		log.info(pathUri);
		log.info(path);
		log.info(pathVar);		
		
		
		switch(path) {
		
		case "post":
			try {
				// js에서 보낸 데이터를 StringBuffer로 읽는 작업.
				StringBuffer sb = new StringBuffer();
				String line = "";
				BufferedReader br = request.getReader(); //댓글 객체
				while((line = br.readLine()) != null) { //값이 남아 있다는 의미
					sb.append(line);
				}
				log.info(">>> sb : " + sb.toString());
				
				// 객체로 생성
				// JSON <-> Text
				/* JSON 사용할려면 JSON-simple-1.1.1.jar 필수*/				
				JSONParser parser = new JSONParser();
				JSONObject jsonObj = (JSONObject) parser.parse(sb.toString());
				
				int bno = Integer.parseInt(jsonObj.get("bno").toString());
				String writer = jsonObj.get("writer").toString();
				String content = jsonObj.get("content").toString();				
				
				CommentVO cvo = new CommentVO(bno, writer, content);
				
				isOk = csv.post(cvo);
				log.info(">>> post > "+(isOk>0?"ok":"fail"));
				
				// 결과 전송
				PrintWriter out = response.getWriter(); //destpage와 같은 효과
				out.print(isOk);
				
			} catch (Exception e) {
				log.info(">>> Comment post > error");
				e.printStackTrace();
			}
			break;
			
			
			
		case "list" : 
			try {
				int bno = Integer.parseInt(pathVar);
				List<CommentVO> list = csv.getLsit(bno);
				log.info(">>> Comment List > DB Ok");
				
				//JSON 형태로 변환해서 printWriter
				JSONObject[] jsonObjArr = new JSONObject[list.size()];
				JSONArray jsonObjList = new JSONArray();
				for(int i=0; i<list.size(); i++) {
					jsonObjArr[i] = new JSONObject();  //key : value
					jsonObjArr[i].put("cno", list.get(i).getCno());
					jsonObjArr[i].put("bno", list.get(i).getBno());
					jsonObjArr[i].put("writer", list.get(i).getWriter());
					jsonObjArr[i].put("content", list.get(i).getContent());
					jsonObjArr[i].put("reg_date", list.get(i).getReg_date());
					
					jsonObjList.add(jsonObjArr[i]);
				}
				log.info(">>>> jsonObjList" + jsonObjList);
				
				String jsonData = jsonObjList.toJSONString();
				log.info(">>>> jsonData" + jsonData);
				
				PrintWriter out = response.getWriter();
				out.print(jsonData);
				
 			} catch (Exception e) {
 				log.info(">>>> comment list > error");
				e.printStackTrace();
			}
			
			break;
			
		case "remove" :
			try {
				int cno = Integer.parseInt(request.getParameter("cnoVal")); //쿼리리스트 스트링방식
				log.info(">>> cno > " +cno);
				
				isOk = csv.remove(cno);
				log.info(">>> remove > "+(isOk > 0 ? "OK":"FAIL"));
				PrintWriter out =response.getWriter();
				out.print(isOk);
				
			}catch (Exception e) {
				// TODO: handle exception
				log.info("remove error");
				e.printStackTrace();
			}
		
		
		
		
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
		
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
